FORMAT: 1A

# Hackathon Documentation

Hackathon api documentation

# Group Sessions

## Sessions [/v1/sessions]

### Store [POST]
Get new JWT token

+ Request (application/json)
    + Attributes
        + email: mail@leomotta2.me (string, required)
        + password: 114122 (string, required)

+ Response 200 (application/json)
    + Attributes
        + user (object)
            + id: 1 (number, required)
            + name: john Doe (string, required)
        + token: long_string_jwt_token (string, required)

+ Response 400 (application/json)
    + Attributes (Error)

# Group User

## User [/v1/user]

### Store [POST]
Store new user to database.

+ Request (application/json)
    + Attributes (User)
        + password: 123456 (number, required)
        + confirm_password: 123456 (number, required)

+ Response 201 (application/json)

+ Response 400 (application/json)
    + Attributes (Error Field)

## User [/v1/user{?perPage,page}]

+ Parameters
    + perPage: 20 (number, optional)
    + page: 1 (number, optional)

### Index [GET]
Get all users.

+ Response 200 (application/json)
    + Attributes
        + users (array)
            + (User) (object)
                + id (number, required)
        + pagination (Pagination)

## User ID [/v1/user/{id}]

+ Parameters
    + id (number, required)

### Index [GET]
Get hackathon.

+ Response 200 (application/json)
    + Attributes (User)
        + id (number, required)

+ Response 404 (application/json)
    + Attributes (Error)

### Update [PUT]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes (User)
        + password: 123456 (number, required)
        + confirm_password: 123456 (number, required)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error)

# Group Hackathon

## Hackathon [/v1/hackathon]

### Store [POST]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 201 (application/json)
    + Attributes (Hackathon)

+ Response 400 (application/json)
    + Attributes (Error Field)

## Hackathon Query [/v1/hackathon{?perPage,page}]

+ Parameters
    + perPage: 20 (number, optional)
    + page: 1 (number, optional)

### Index [GET]
Get all available hackathons.

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)
    + Attributes
        + hackathons (array)
            + (Hackathon) (object)
                + id (number, required)
        + pagination (Pagination)

## Hackathon ID [/v1/hackathon/{id}]

+ Parameters
    + id: 1 (number, required)

### Index [GET]
Get hackathon.

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)
    + Attributes (Hackathon)
        + id (number, required)

+ Response 404 (application/json)
    + Attributes (Error)

### Update [PUT]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes (Hackathon)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error)

### Delete [DELETE]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204

+ Response 404 (application/json)
    + Attributes (Error)

## Data Structures

### User
+ name: Leo Motta (string, required)
+ email: test@test.com (string, required)
+ nickname: leomotta (string, required) Unique value
+ bio: user long string bio (string)
+ urls (array)
    + https://validurl.com.br (string)
+ role: frontend (string)

### Hackathon

+ organizer: 1 (number, required) belongs to user id
+ title: Hackathon Title (string, required)
+ subtitle: The awesome hackathon subtitle (string, required)
+ description: Textare description (string, required)
+ location: address (string, required)
+ online: true (boolean, required)
+ event_date: UTC date (string, required)
+ ending_date: Event ending date UTC (string, required)
+ deadline_subscription: UTC date (string, required)
+ min_participants: 0 (number, required)
+ max_participants: 1000 (number, required)
+ awards: text area string (string, required)
+ cover_url: https://imageurl.com.br/cover (string, required)

### Error
+ name: Error title (string, required)
+ message: User friendly error message(string, required)
+ status (number)

### Error Field
+ name: Error title (string, required)
+ message: User friendly error message(string, required)
+ status (number)
+ fields (array)
    + (object)
        + field_name: message (string, required)

### Pagination

+ maxPage: 1 (number, required)
+ currentPage: 1 (number, required)
+ nextPage: 0 (number, required)
+ previousPage: 2 (number, required)
+ hasNextPage: false (boolean, required)
+ hasPreviousPage: true (boolean, required)
