FORMAT: 1A

# Hackathon Documentation

Hackathon api documentation

# Group Roles

## Roles [/v1/roles]

### Index [GET]

+ Response 200 (application/json)
    + Attributes
        + id: 1 (number)
        + name: Frontend (string)

# Group Sessions

## Sessions [/v1/sessions]

### Store [POST]
Get new JWT token

+ Request (application/json)
    + Attributes
        + email: mail@leomotta2.me (string, required)
        + password: 114122 (string, required)

+ Response 200 (application/json)
    + Attributes
        + user (object)
            + id: 1 (number)
            + name: john Doe (string)
            + email: john@email.com (string)
        + token: long_string_jwt_token (string)

+ Response 400 (application/json)
    + Attributes (Error)

# Group Users

### Store [POST /v1/users]
Store new user to database.

+ Request (application/json)
    + Attributes (User)
        + password: 123456 (string, required)

+ Response 201 (application/json)
    + Attributes
      + id: 1 (number)
      + name: 'Jonas Coe' (string)
      + nickname: 'jonascoe' (string)

+ Response 400 (application/json)
    + Attributes (Error Field)

### Show [GET /v1/users/:nickname]

+ Response 200 (application/json)
    + Attributes (UserShow)

+ Response 404 (application/json)
    + Attributes (Error)

### Update [PUT /v1/users]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes (User)
        + password: 123456 (string, required)
        + confirmPassword: 123456 (string, required)

+ Response 200 (application/json)
    + Attributes
      + id: 1 (number)
      + name: 'Jonas Coe' (string)
      + nickname: 'jonascoe' (string)

+ Response 404 (application/json)
    + Attributes (Error)

# Group User Recover

### Store [POST /v1/hackathons]

+ Request (application/json)
    + Attributes
          + email: email@test.com (string, required)

+ Response 200 (application/json)
    + Attributes
      + id: 1 (number)
      + name: 'Jonas Coe' (string)
      + nickname: 'jonascoe' (string)

+ Response 400 (application/json)
    + Attributes (Error Field)

### Update [PUT /v1/hackathons/:token]

+ Request (application/json)
    + Attributes
          + password: 123123 (string, required)
          + confirmPassword: 123123 (string, required)

+ Response 200 (application/json)
    + Attributes
      + id: 1 (number)
      + name: 'Jonas Coe' (string)
      + nickname: 'jonascoe' (string)

+ Response 400 (application/json)
    + Attributes (Error Field)

# Group Hackathons

### Store [POST /v1/hackathons]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==
    + Attributes (Hackathon)

    + Attributes (Hackathon)

+ Response 201 (application/json)
    + Attributes

+ Response 400 (application/json)
    + Attributes (Error Field)

### Index [GET /v1/hackathons]
Get all available hackathons.

+ Request (application/json)
    + Headers
        Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==
    +

+ Response 200 (application/json)
    + Attributes
        + hackathons (array)
            + (Hackathon) (object)
                + id (number, required)
        + pagination (Pagination)

+ Parameters
    + perPage: 20 (number, optional)
    + page: 1 (number, optional)

### Show [GET /v1/hackathon/:id]
Get hackathon.

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)
    + Attributes (Hackathon)
        + id (number, required)

+ Response 404 (application/json)
    + Attributes (Error)

### Update [PUT /v1/hackathon/:id]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes (Hackathon)

+ Response 200 (application/json)
    + Attributes (Hackathon)

+ Response 404 (application/json)
    + Attributes (Error)

### Delete [DELETE /v1/hackathon/:id]

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204

+ Response 404 (application/json)
    + Attributes (Error)

# Group Participants

### Index [GET /v1/hackathon/{id}/participants{?perPage,page}]

+ Parameters
    + perPage: 20 (number, optional)
    + page: 1 (number, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)
    + Attributes
        + participants (array)
            + (User) (object)
                + id (number, required)
        + pagination (Pagination)

### Store [POST /v1/hackathon/{id}/participants]

+ Parameters
    + id (number, required)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 201 (application/json)
    + Attributes (Hackathon)

+ Response 400 (application/json)
    + Attributes (Error)

### Delete [DELETE /v1/hackathon/{id}/participants]

+ Parameters
    + id (number, required)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204 (application/json)
    + Attributes (Hackathon)

+ Response 400 (application/json)
    + Attributes (Error)


# Group Team

### Store [POST /v1/hackathons/{id}/team]

+ Parameters
    + id (number, required)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes (array)
        + email: user@email.com (string, required)

+ Response 201 (application/json)

+ Response 404 (application/json)
    + Attributes (Error Field)

### Index [GET /v1/hackathons/{id}/team{?perPage,page}]

+ Parameters
    + id (number, required)
    + perPage: 20 (number, optional)
    + page: 1 (number, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes
        + participants (array)
            + (object)
                + id (number)
                + name: Leo Motta (string, required)
                + roles: (array)
                    + (object)
                        + id: 1 (number)
                        + role: (object)
                            + name: Frontend (string)
            + (object)
                + id (number)
                + name: Leo Motta (string, required)
                + roles: (array)
                    + (object)
                        + id: 1 (number)
                        + role: (object)
                            + name: Frontend (string)
        + pagination (Pagination)

+ Response 200 (application/json)

### Show [GET /v1/hackathons/{id}/team/{teamId}]

+ Parameters
    + id (number, required)
    + teamId (number, required)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes (array[User])

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error)

### Update [PUT /v1/hackathons/{id}/team/{teamId}]

+ Parameters
    + id (number, required)
    + teamId (number, required)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Attributes
        + email: user@email.com (string, required)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error)

### Delete [DELETE /v1/hackathons/{id}/team/{teamId}]

+ Parameters
    + id (number, required)
    + teamId (number, required)

+ Request (application/json)
    + Headers

            Authorization: Bearer QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204 (application/json)

+ Response 404 (application/json)
    + Attributes (Error)


## Data Structures

### User
+ name: Leo Motta (string, required)
+ email: test@test.com (string, required)
+ nickname: leomotta (string, required) Unique value
+ bio: user long string bio (string)
+ urls (array)
  + https://validurl.com.br (string)
+ role: (array)
  + 1 (number)
  + 2 (number)

### UserShow
+ user: (object)
  + id: 1 (number, required)
  + name: Leo Motta (string, required)
  + nickname: leomotta (string, required) Unique value
  + bio: user long string bio (string)
  + avatar: (object)
      + url: "https://urlimage.com"
      + name: "arquivo.jpg"
      + path: "cefcaedb6c373b421d533167e509b552.jpg"
+ urls (array)
  + (object)
      + url: https://validurl.com.br (string)
  + (object)
      + url: https://github.com (string)
+ roles: (array)
  + (object)
      + id: 1 (number)
        + role: (object)
            + name: Frontend (string)
  + (object)
      + id: 1 (number)
        + role: (object)
            + name: Marketing (string)

### Hackathon

+ organizer: 1 (number, required) belongs to user id
+ title: Hackathon Title (string, required)
+ subtitle: The awesome hackathon subtitle (string, required)
+ description: Textare description (string, required)
+ location: address (string, required)
+ online: true (boolean, required)
+ event_date: UTC date (string, required)
+ ending_date: Event ending date UTC (string, required)
+ deadline_subscription: UTC date (string, required)
+ min_participants: 0 (number, required)
+ max_participants: 1000 (number, required)
+ awards: text area string (string, required)
+ cover_url: https://imageurl.com.br/cover (string, required)

### Error
+ name: Error title (string, required)
+ message: User friendly error message(string, required)
+ status (number)

### Error Field
+ name: Error title (string, required)
+ message: User friendly error message(string, required)
+ status (number)
+ fields (array)
  + (object)
      + field_name: message (string, required)

### Pagination

+ maxPage: 1 (number, required)
+ currentPage: 1 (number, required)
+ nextPage: 0 (number, required)
+ previousPage: 2 (number, required)
+ hasNextPage: false (boolean, required)
+ hasPreviousPage: true (boolean, required)
